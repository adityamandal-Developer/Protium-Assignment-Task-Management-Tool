import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import ThemeProviders from "@/app/theme-provider";
import { getServerSession } from "next-auth/next";
import ClientSessionProvider from "./ClientSessionProvider";
import StoreProvider from "./StoreProvider";
import { authOptions } from "@/authOptions";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v15-appRouter";
import { ThemeProvider } from "@mui/material/styles";
import theme from "./theme";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await getServerSession(authOptions);
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ClientSessionProvider session={session}>
          <StoreProvider>
            <ThemeProviders>
              <AppRouterCacheProvider>
                <ThemeProvider theme={theme}>{children}</ThemeProvider>
              </AppRouterCacheProvider>
            </ThemeProviders>
          </StoreProvider>
        </ClientSessionProvider>
      </body>
    </html>
  );
}
